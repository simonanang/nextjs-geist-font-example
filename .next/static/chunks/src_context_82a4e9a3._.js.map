{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/context/UserContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User } from '@/lib/types';\n\ninterface UserContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  signup: (email: string, password: string, name: string, role: 'buyer' | 'seller') => Promise<boolean>;\n  switchAccountType: (newRole: 'buyer' | 'seller') => Promise<boolean>;\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst UserContext = createContext<UserContextType | undefined>(undefined);\n\nexport const useUser = () => {\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\nexport const UserProvider: React.FC<UserProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Check for existing session on mount\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (err) {\n        console.error('Error parsing saved user:', err);\n        localStorage.removeItem('user');\n      }\n    }\n  }, []);\n\n  const login = async (email: string, password: string): Promise<boolean> => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData.user);\n        localStorage.setItem('user', JSON.stringify(userData.user));\n        return true;\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || 'Login failed');\n        return false;\n      }\n    } catch (err) {\n      setError('Network error occurred');\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const signup = async (email: string, password: string, name: string, role: 'buyer' | 'seller'): Promise<boolean> => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch('/api/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password, name, role }),\n      });\n\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData.user);\n        localStorage.setItem('user', JSON.stringify(userData.user));\n        return true;\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || 'Signup failed');\n        return false;\n      }\n    } catch (err) {\n      setError('Network error occurred');\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    setError(null);\n  };\n\n  const switchAccountType = async (newRole: 'buyer' | 'seller'): Promise<boolean> => {\n    if (!user) {\n      setError('No user logged in');\n      return false;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch('/api/auth/switch-role', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ userId: user.id, newRole }),\n      });\n\n      if (response.ok) {\n        const updatedUser = { ...user, role: newRole };\n        setUser(updatedUser);\n        localStorage.setItem('user', JSON.stringify(updatedUser));\n        return true;\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || 'Failed to switch account type');\n        return false;\n      }\n    } catch (err) {\n      setError('Network error occurred');\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const value: UserContextType = {\n    user,\n    login,\n    logout,\n    signup,\n    switchAccountType,\n    isLoading,\n    error,\n  };\n\n  return (\n    <UserContext.Provider value={value}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/context/CurrencyContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { CurrencyRate } from '@/lib/types';\n\ninterface CurrencyContextType {\n  selectedCurrency: string;\n  currencyRates: CurrencyRate[];\n  convertPrice: (priceUSD: number) => number;\n  setCurrency: (currency: string) => void;\n  getCurrencySymbol: () => string;\n  isLoading: boolean;\n}\n\nconst CurrencyContext = createContext<CurrencyContextType | undefined>(undefined);\n\nexport const useCurrency = () => {\n  const context = useContext(CurrencyContext);\n  if (context === undefined) {\n    throw new Error('useCurrency must be used within a CurrencyProvider');\n  }\n  return context;\n};\n\ninterface CurrencyProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrencyProvider: React.FC<CurrencyProviderProps> = ({ children }) => {\n  const [selectedCurrency, setSelectedCurrency] = useState('USD');\n  const [currencyRates, setCurrencyRates] = useState<CurrencyRate[]>([\n    { code: 'USD', name: 'US Dollar', rate: 1, symbol: '$' },\n    { code: 'EUR', name: 'Euro', rate: 0.85, symbol: '€' },\n    { code: 'GBP', name: 'British Pound', rate: 0.73, symbol: '£' },\n    { code: 'JPY', name: 'Japanese Yen', rate: 110, symbol: '¥' },\n    { code: 'CAD', name: 'Canadian Dollar', rate: 1.25, symbol: 'C$' },\n  ]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    // Load saved currency preference\n    const savedCurrency = localStorage.getItem('selectedCurrency');\n    if (savedCurrency) {\n      setSelectedCurrency(savedCurrency);\n    }\n  }, []);\n\n  const convertPrice = (priceUSD: number): number => {\n    const rate = currencyRates.find(r => r.code === selectedCurrency)?.rate || 1;\n    return priceUSD * rate;\n  };\n\n  const setCurrency = (currency: string) => {\n    setSelectedCurrency(currency);\n    localStorage.setItem('selectedCurrency', currency);\n  };\n\n  const getCurrencySymbol = (): string => {\n    return currencyRates.find(r => r.code === selectedCurrency)?.symbol || '$';\n  };\n\n  const value: CurrencyContextType = {\n    selectedCurrency,\n    currencyRates,\n    convertPrice,\n    setCurrency,\n    getCurrencySymbol,\n    isLoading,\n  };\n\n  return (\n    <CurrencyContext.Provider value={value}>\n      {children}\n    </CurrencyContext.Provider>\n  );\n};\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAcA,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAmC;AAEhE,MAAM,cAAc;;IACzB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANa;AAYN,MAAM,mBAAoD,CAAC,EAAE,QAAQ,EAAE;;IAC5E,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;QACjE;YAAE,MAAM;YAAO,MAAM;YAAa,MAAM;YAAG,QAAQ;QAAI;QACvD;YAAE,MAAM;YAAO,MAAM;YAAQ,MAAM;YAAM,QAAQ;QAAI;QACrD;YAAE,MAAM;YAAO,MAAM;YAAiB,MAAM;YAAM,QAAQ;QAAI;QAC9D;YAAE,MAAM;YAAO,MAAM;YAAgB,MAAM;YAAK,QAAQ;QAAI;QAC5D;YAAE,MAAM;YAAO,MAAM;YAAmB,MAAM;YAAM,QAAQ;QAAK;KAClE;IACD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,iCAAiC;YACjC,MAAM,gBAAgB,aAAa,OAAO,CAAC;YAC3C,IAAI,eAAe;gBACjB,oBAAoB;YACtB;QACF;qCAAG,EAAE;IAEL,MAAM,eAAe,CAAC;QACpB,MAAM,OAAO,cAAc,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,mBAAmB,QAAQ;QAC3E,OAAO,WAAW;IACpB;IAEA,MAAM,cAAc,CAAC;QACnB,oBAAoB;QACpB,aAAa,OAAO,CAAC,oBAAoB;IAC3C;IAEA,MAAM,oBAAoB;QACxB,OAAO,cAAc,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,mBAAmB,UAAU;IACzE;IAEA,MAAM,QAA6B;QACjC;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,6LAAC,gBAAgB,QAAQ;QAAC,OAAO;kBAC9B;;;;;;AAGP;IA/Ca;KAAA","debugId":null}}]
}